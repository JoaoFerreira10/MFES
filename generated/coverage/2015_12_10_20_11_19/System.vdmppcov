class System
types
public InstitutionName = seq of char;
values
-- TODO Define values here
instance variables
private group_users : seq of Group_User := [];
private group_sectors : seq of Group_Sector := [];
/*private sectors : seq of Sector := [];*/
private rules : seq of Rules :=[];
private name : InstitutionName;

operations

public System : InstitutionName ==> System   /* > create a := new User("luis","trolha"); >print a*/
System(sys) == (
	name := sys;
	return self 
	);
 
pure public getGroupUser: () ==> seq of Group_User
getGroupUser() == return group_users;

/* getRules(sys)*/


functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end System



/* TODO 
addRuleSector(sector, regra)    
addRuleGroupSector(sectorGroup, regra)

addSector_toUser (setor, user)
addGroupsector_toUser (gourp, user)

addSector_toGroupUser (setor, user)
addGroupsector_toGroupUser (gourp, user)



*/
 