class Room
types
public RoomName = seq of char;
values
-- TODO Define values here
instance variables
private name: RoomName;

operations
public Room : RoomName ==> Room   /* > create a := new User("luis","trolha"); >print a*/
Room(ro) == (
	name := ro;
	return self 
	);
	
pure public getRoomName: () ==> RoomName
getRoomName() == return name;
/*	public Rules : DescriptionRule * Sector ==> Rules    
Rules(ru, sec) == (
	description := ru;
	sectors := [sec]^sectors;
	return self 
	);*/
	/*
public addSector_to_rule : Sector ==> ()
addSector_to_rule(add) ==
sectors:= [add] ^ sectors
post sectors = [add]^sectors~;*/
functions

traces
-- TODO Define Combinatorial Test Traces here
end Room




/* 
> create s := new Sector("dei")
> print s.addRoom("i003")
()
> print s
Sector{#1, sector_name:="dei", room_name:=["i003"]}
> create r := new Rules("acesso ao i",s)
> print r
Rules{#2, description:="acesso ao i", sectors:=[Sector{#1, sector_name:="dei", room_name:=["i003"]}]} 

*/