class Rules
types

	public Request = <allow> | <deny>;
	public Group_User = seq of char;
	public Group_Sector = seq of char;

values
-- TODO Define values here
instance variables

	requestBool: Request;
	public group_User: Group_User;
	public group_Sector: Group_Sector;



operations

public Rules : Request * Group_User * Group_Sector ==> Rules
	Rules(req, gr, gs) == (
		requestBool := req;
		group_User := gr;
		group_Sector := gs;
		return self;
	);



functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Rules




/* 
> create s := new Sector("dei")
> print s.addRoom("i003")
()
> print s
Sector{#1, sector_name:="dei", room_name:=["i003"]}
> create r := new Rules("acesso ao i",s)
> print r
Rules{#2, description:="acesso ao i", sectors:=[Sector{#1, sector_name:="dei", room_name:=["i003"]}]} 

*/